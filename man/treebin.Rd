% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treebin.R
\name{treebin}
\alias{treebin}
\title{Tree-based Binning}
\usage{
treebin(X, stopCriteria = gapStop, binMeasure = gapMeasure,
  boundaryTest = gapBoundaryTest, selectBin = gapSelect,
  splitBin = gapSplit, makePoint = gapPoints, binInfo = list(binRange =
  matrix(rep(c(-Inf, Inf), ncol(X)), 2, ncol(X))), inputs = list(tau = 1,
  numbins = floor(nrow(X)/2)))
}
\arguments{
\item{X}{The point configuration to be binned}

\item{stopCriteria}{A user supplied function to compute the stopping criteria of the function}

\item{binMeasure}{A user supplied function to compute the measure associated with each bin}

\item{boundaryTest}{A user supplied function to test if a given point is contained in a given bin}

\item{selectBin}{A user supplied function for choosing between bins to be split}

\item{splitBin}{A user supplied function for splitting a bin}

\item{makePoint}{A user supplied function to turn the contents of a bin into a single point}

\item{binInfo}{Additional information to be supplied to the first bin. Default is NULL.}

\item{inputs}{A list containing additional input parameters required by user supplied functions. Default is NULL.}
}
\value{
The return value is an object of class treebinr, which contains the following 
\item{points}{A matrix containing the reduced point configuration}
\item{counts}{A vector containing the number of points in each bin}
\item{bins}{A list containing bin objects, which detail the contents of each bin}
\item{tree}{An undirected graph object for the binning tree}
}
\description{
\code{treebin} bins the provided data using the tree-based binning method, as described in Rahman & Oldford (2018).
}
\examples{
set.seed(1324567)
X <- data.frame(x = rnorm(2000), y = rnorm(1000))
out <- treebin(X, inputs = list(tau = 1, numbins = 500))
Xreduced <- as.data.frame(out@points, col.names = c("x", "y"))
Xsampled <- X[sample(1:nrow(X), 500, replace = FALSE),]

savePar <- par(mfrow = c(1,3))
xlim <- extendrange(X$x); ylim <- extendrange(X$y)
plot(X, 
     main = paste0("original data (", nrow(X)," points)"),
     xlim = xlim, ylim = ylim)
plot(Xreduced, 
     main = paste0("reduced data (", nrow(Xreduced)," points)"),
     xlim = xlim, ylim = ylim)
plot(Xsampled, 
     main = paste0("sampled data (", nrow(Xsampled)," points)"),
     xlim = xlim, ylim = ylim)
par(savePar)

}
\references{

}
